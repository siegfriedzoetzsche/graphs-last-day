* Idea
The idea behind changing the /run.py/ / /demo_run.py/ to /runAsSets.py/ was that in the old setup one couldn't combine compunded rules with 'simple' rules (i.e. rules that were not parted out to several files). The solution to this problem was to make *all* rules consist of sets. 
As such, a list was created in the run-file that combines all rules into a list that can be executed in parallel.

* Usage
In order to use this setup, you need the /runAsSets.py/ as a run-file ($ mod -f runAsSets.py), as well as /includeAllSets.py/ and /molecules.py/
The easiest way to deal with this is to just do a
#+begin_src sh
scp grpraktikum@prak10.bioinf.uni-leipzig.de:~/Documents/corerules/* . 
#+end_src
in the folder you are in. You should have all the necessary files and not worry about dependencies.
** runAsSets.py
The most important things to do in this file are to specify which rules you want to use in your experiment. The rules you use are specified as a union of lists in the /compound_rules/ variable. Just put in the rules you want to work with in the #+begin_src python list(...) #+end_src keyword.
If you don't want to use a particular strategy, just specify the number of repeats you want to do (within the #+begin_src python repeat[...] #+end_src keyword) and execute mod.
If you want to use a specific strategy, it might be better to use the old version (see [[documentation run]]). If you interested why this is, please check out the *[[https://github.com/siegfriedzoetzsche/grprak/wiki/documentation-runAsSets#shortcomings][shortcomings]]* paragraph
** molecules.py
The molecules-file specifies which molecules are present in the chemical environment. It contains a list of the molecules the rules can be applied to, and should be as specific to the experiment as possible in order to not generate too many unnecessary graphs. Since mod uses the smile-notation ([[https://en.wikipedia.org/wiki/Simplified_molecular-input_line-entry_system][SMILES wiki page]]), the molecules should be specified in this form. The molecules are organized as minimal molecules for specific reactions. If you are not interested in a reaction, just comment it out. If you want to use more complex molecules, include them via the smile-notation, preferably following the convention used in /molecules.py/
** includeAllSets.py
This file contains all rules that could be applied to the experiment. It imports these rules as sets (from the corresponding *_*_*.py or *_*_*_*.py files, which have to be present in the same folder (see above)).
You shouldn't have to touch the file. If you feel like you want to, please come to *PRAK04* or *PRAK05* to discuss why you feel like it. Maybe you've spot a mistake or something that can be improved

* Shortcomings
Since strategies specified in /includeAllSets.py/ are combined into a list within /runAsSets.py/, strategies other than including all in sets *might* not work in this setup. If you want to do this, you would have to try it out yourself, or come to talk to us at *PRAK04* or *PRAK05*